/* 
 * Bundledocs.Web.Api
 *
 * Bundledocs Web Api (v1)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Bundledocs.Model
{
    /// <summary>
    /// CreateBlankDocumentsBean
    /// </summary>
    [DataContract]
    public partial class CreateBlankDocumentsBean :  IEquatable<CreateBlankDocumentsBean>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateBlankDocumentsBean" /> class.
        /// </summary>
        /// <param name="BriefPartitionKey">BriefPartitionKey.</param>
        /// <param name="BriefRowKey">BriefRowKey.</param>
        /// <param name="ParentRowKey">ParentRowKey.</param>
        /// <param name="Description">Description.</param>
        /// <param name="NumberOfPages">NumberOfPages.</param>
        public CreateBlankDocumentsBean(string BriefPartitionKey = null, string BriefRowKey = null, string ParentRowKey = null, string Description = null, int? NumberOfPages = null)
        {
            this.BriefPartitionKey = BriefPartitionKey;
            this.BriefRowKey = BriefRowKey;
            this.ParentRowKey = ParentRowKey;
            this.Description = Description;
            this.NumberOfPages = NumberOfPages;
        }
        
        /// <summary>
        /// Gets or Sets BriefPartitionKey
        /// </summary>
        [DataMember(Name="BriefPartitionKey", EmitDefaultValue=false)]
        public string BriefPartitionKey { get; set; }
        /// <summary>
        /// Gets or Sets BriefRowKey
        /// </summary>
        [DataMember(Name="BriefRowKey", EmitDefaultValue=false)]
        public string BriefRowKey { get; set; }
        /// <summary>
        /// Gets or Sets ParentRowKey
        /// </summary>
        [DataMember(Name="ParentRowKey", EmitDefaultValue=false)]
        public string ParentRowKey { get; set; }
        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="Description", EmitDefaultValue=false)]
        public string Description { get; set; }
        /// <summary>
        /// Gets or Sets NumberOfPages
        /// </summary>
        [DataMember(Name="NumberOfPages", EmitDefaultValue=false)]
        public int? NumberOfPages { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreateBlankDocumentsBean {\n");
            sb.Append("  BriefPartitionKey: ").Append(BriefPartitionKey).Append("\n");
            sb.Append("  BriefRowKey: ").Append(BriefRowKey).Append("\n");
            sb.Append("  ParentRowKey: ").Append(ParentRowKey).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  NumberOfPages: ").Append(NumberOfPages).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as CreateBlankDocumentsBean);
        }

        /// <summary>
        /// Returns true if CreateBlankDocumentsBean instances are equal
        /// </summary>
        /// <param name="other">Instance of CreateBlankDocumentsBean to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateBlankDocumentsBean other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.BriefPartitionKey == other.BriefPartitionKey ||
                    this.BriefPartitionKey != null &&
                    this.BriefPartitionKey.Equals(other.BriefPartitionKey)
                ) && 
                (
                    this.BriefRowKey == other.BriefRowKey ||
                    this.BriefRowKey != null &&
                    this.BriefRowKey.Equals(other.BriefRowKey)
                ) && 
                (
                    this.ParentRowKey == other.ParentRowKey ||
                    this.ParentRowKey != null &&
                    this.ParentRowKey.Equals(other.ParentRowKey)
                ) && 
                (
                    this.Description == other.Description ||
                    this.Description != null &&
                    this.Description.Equals(other.Description)
                ) && 
                (
                    this.NumberOfPages == other.NumberOfPages ||
                    this.NumberOfPages != null &&
                    this.NumberOfPages.Equals(other.NumberOfPages)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.BriefPartitionKey != null)
                    hash = hash * 59 + this.BriefPartitionKey.GetHashCode();
                if (this.BriefRowKey != null)
                    hash = hash * 59 + this.BriefRowKey.GetHashCode();
                if (this.ParentRowKey != null)
                    hash = hash * 59 + this.ParentRowKey.GetHashCode();
                if (this.Description != null)
                    hash = hash * 59 + this.Description.GetHashCode();
                if (this.NumberOfPages != null)
                    hash = hash * 59 + this.NumberOfPages.GetHashCode();
                return hash;
            }
        }
    }

}
